<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.lishangbu.avalon.authorization.mapper.Oauth2RegisteredClientMapper">
  <resultMap id="oauth2RegisteredClientResultMap"
             type="io.github.lishangbu.avalon.authorization.entity.Oauth2RegisteredClient">
    <!--@Table oauth2_registered_client-->
    <id column="id" property="id"/>
    <result column="client_id" property="clientId"/>
    <result column="client_id_issued_at" property="clientIdIssuedAt"/>
    <result column="client_secret" property="clientSecret"/>
    <result column="client_secret_expires_at" property="clientSecretExpiresAt"/>
    <result column="client_name" property="clientName"/>
    <result column="client_authentication_methods" property="clientAuthenticationMethods"/>
    <result column="authorization_grant_types" property="authorizationGrantTypes"/>
    <result column="redirect_uris" property="redirectUris"/>
    <result column="post_logout_redirect_uris" property="postLogoutRedirectUris"/>
    <result column="scopes" property="scopes"/>
    <result column="require_proof_key" property="requireProofKey"/>
    <result column="require_authorization_consent" property="requireAuthorizationConsent"/>
    <result column="jwk_set_url" property="jwkSetUrl"/>
    <result column="token_endpoint_authentication_signing_algorithm"
            property="tokenEndpointAuthenticationSigningAlgorithm"/>
    <result column="x509_certificate_subject_dn" property="x509CertificateSubjectDn"/>
    <result column="authorization_code_time_to_live" property="authorizationCodeTimeToLive"/>
    <result column="access_token_time_to_live" property="accessTokenTimeToLive"/>
    <result column="access_token_format" property="accessTokenFormat"/>
    <result column="device_code_time_to_live" property="deviceCodeTimeToLive"/>
    <result column="reuse_refresh_tokens" property="reuseRefreshTokens"/>
    <result column="refresh_token_time_to_live" property="refreshTokenTimeToLive"/>
    <result column="id_token_signature_algorithm" property="idTokenSignatureAlgorithm"/>
    <result column="x509_certificate_bound_access_tokens" property="x509CertificateBoundAccessTokens"/>
  </resultMap>

  <sql id="oauth2RegisteredClientColumnList">
    id,
    client_id,
    client_id_issued_at,
    client_secret,
    client_secret_expires_at,
    client_name,
    client_authentication_methods,
    authorization_grant_types,

    redirect_uris,
    post_logout_redirect_uris,
    scopes,
    require_proof_key,
    require_authorization_consent,
    jwk_set_url,
    token_endpoint_authentication_signing_algorithm,
    x509_certificate_subject_dn,

    authorization_code_time_to_live,
    access_token_time_to_live,
    access_token_format,
    device_code_time_to_live,
    reuse_refresh_tokens,
    refresh_token_time_to_live,
    id_token_signature_algorithm,
    x509_certificate_bound_access_tokens
  </sql>

  <!--通过id查询单条Oauth2注册客户端数据-->
  <select id="selectById" resultMap="oauth2RegisteredClientResultMap">
    select
    <include refid="oauth2RegisteredClientColumnList"/>
    from oauth2_registered_client
    where id = #{id}
  </select>

  <!--新增Oauth2注册客户端-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into oauth2_registered_client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientId != null and clientId != ''">
        client_id,
      </if>
      <if test="clientIdIssuedAt != null">
        client_id_issued_at,
      </if>
      <if test="clientSecret != null and clientSecret != ''">
        client_secret,
      </if>
      <if test="clientSecretExpiresAt != null">
        client_secret_expires_at,
      </if>
      <if test="clientName != null and clientName != ''">
        client_name,
      </if>
      <if test="clientAuthenticationMethods != null and clientAuthenticationMethods != ''">
        client_authentication_methods,
      </if>
      <if test="authorizationGrantTypes != null and authorizationGrantTypes != ''">
        authorization_grant_types,
      </if>
      <if test="redirectUris != null and redirectUris != ''">
        redirect_uris,
      </if>
      <if test="postLogoutRedirectUris != null and postLogoutRedirectUris != ''">
        post_logout_redirect_uris,
      </if>
      <if test="scopes != null and scopes != ''">
        scopes,
      </if>
      <if test="requireProofKey != null">
        require_proof_key,
      </if>
      <if test="requireAuthorizationConsent != null">
        require_authorization_consent,
      </if>
      <if test="jwkSetUrl != null and jwkSetUrl != ''">
        jwk_set_url,
      </if>
      <if
        test="tokenEndpointAuthenticationSigningAlgorithm != null and tokenEndpointAuthenticationSigningAlgorithm != ''">
        token_endpoint_authentication_signing_algorithm,
      </if>
      <if test="x509CertificateSubjectDn != null and x509CertificateSubjectDn != ''">
        x509_certificate_subject_dn,
      </if>
      <if test="authorizationCodeTimeToLive != null and authorizationCodeTimeToLive != ''">
        authorization_code_time_to_live,
      </if>
      <if test="accessTokenTimeToLive != null and accessTokenTimeToLive != ''">
        access_token_time_to_live,
      </if>
      <if test="accessTokenFormat != null and accessTokenFormat != ''">
        access_token_format,
      </if>
      <if test="deviceCodeTimeToLive != null and deviceCodeTimeToLive != ''">
        device_code_time_to_live,
      </if>
      <if test="reuseRefreshTokens != null">
        reuse_refresh_tokens,
      </if>
      <if test="refreshTokenTimeToLive != null and refreshTokenTimeToLive != ''">
        refresh_token_time_to_live,
      </if>
      <if test="idTokenSignatureAlgorithm != null and idTokenSignatureAlgorithm != ''">
        id_token_signature_algorithm,
      </if>
      <if test="x509CertificateBoundAccessTokens != null">
        x509_certificate_bound_access_tokens,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="clientId != null and clientId != ''">
        #{clientId},
      </if>
      <if test="clientIdIssuedAt != null">
        #{clientIdIssuedAt},
      </if>
      <if test="clientSecret != null and clientSecret != ''">
        #{clientSecret},
      </if>
      <if test="clientSecretExpiresAt != null">
        #{clientSecretExpiresAt},
      </if>
      <if test="clientName != null and clientName != ''">
        #{clientName},
      </if>
      <if test="clientAuthenticationMethods != null and clientAuthenticationMethods != ''">
        #{clientAuthenticationMethods},
      </if>
      <if test="authorizationGrantTypes != null and authorizationGrantTypes != ''">
        #{authorizationGrantTypes},
      </if>
      <if test="redirectUris != null and redirectUris != ''">
        #{redirectUris},
      </if>
      <if test="postLogoutRedirectUris != null and postLogoutRedirectUris != ''">
        #{postLogoutRedirectUris},
      </if>
      <if test="scopes != null and scopes != ''">
        #{scopes},
      </if>
      <if test="requireProofKey != null">
        #{requireProofKey},
      </if>
      <if test="requireAuthorizationConsent != null">
        #{requireAuthorizationConsent},
      </if>
      <if test="jwkSetUrl != null and jwkSetUrl != ''">
        #{jwkSetUrl},
      </if>
      <if
        test="tokenEndpointAuthenticationSigningAlgorithm != null and tokenEndpointAuthenticationSigningAlgorithm != ''">
        #{tokenEndpointAuthenticationSigningAlgorithm},
      </if>
      <if test="x509CertificateSubjectDn != null and x509CertificateSubjectDn != ''">
        #{x509CertificateSubjectDn},
      </if>
      <if test="authorizationCodeTimeToLive != null and authorizationCodeTimeToLive != ''">
        #{authorizationCodeTimeToLive},
      </if>
      <if test="accessTokenTimeToLive != null and accessTokenTimeToLive != ''">
        #{accessTokenTimeToLive},
      </if>
      <if test="accessTokenFormat != null and accessTokenFormat != ''">
        #{accessTokenFormat},
      </if>
      <if test="deviceCodeTimeToLive != null and deviceCodeTimeToLive != ''">
        #{deviceCodeTimeToLive},
      </if>
      <if test="reuseRefreshTokens != null">
        #{reuseRefreshTokens},
      </if>
      <if test="refreshTokenTimeToLive != null and refreshTokenTimeToLive != ''">
        #{refreshTokenTimeToLive},
      </if>
      <if test="idTokenSignatureAlgorithm != null and idTokenSignatureAlgorithm != ''">
        #{idTokenSignatureAlgorithm},
      </if>
      <if test="x509CertificateBoundAccessTokens != null">
        #{x509CertificateBoundAccessTokens},
      </if>
    </trim>
  </insert>

  <!--通过id修改Oauth2注册客户端-->
  <update id="updateById">
    update oauth2_registered_client
    <set>
      <if test="clientId != null and clientId != ''">
        client_id = #{clientId},
      </if>
      <if test="clientIdIssuedAt != null">
        client_id_issued_at = #{clientIdIssuedAt},
      </if>
      <if test="clientSecret != null and clientSecret != ''">
        client_secret = #{clientSecret},
      </if>
      <if test="clientSecretExpiresAt != null">
        client_secret_expires_at = #{clientSecretExpiresAt},
      </if>
      <if test="clientName != null and clientName != ''">
        client_name = #{clientName},
      </if>
      <if test="clientAuthenticationMethods != null and clientAuthenticationMethods != ''">
        client_authentication_methods = #{clientAuthenticationMethods},
      </if>
      <if test="authorizationGrantTypes != null and authorizationGrantTypes != ''">
        authorization_grant_types = #{authorizationGrantTypes},
      </if>
      <if test="redirectUris != null and redirectUris != ''">
        redirect_uris = #{redirectUris},
      </if>
      <if test="postLogoutRedirectUris != null and postLogoutRedirectUris != ''">
        post_logout_redirect_uris = #{postLogoutRedirectUris},
      </if>
      <if test="scopes != null and scopes != ''">
        scopes = #{scopes},
      </if>
      <if test="requireProofKey != null">
        require_proof_key = #{requireProofKey},
      </if>
      <if test="requireAuthorizationConsent != null">
        require_authorization_consent = #{requireAuthorizationConsent},
      </if>
      <if test="jwkSetUrl != null and jwkSetUrl != ''">
        jwk_set_url = #{jwkSetUrl},
      </if>
      <if
        test="tokenEndpointAuthenticationSigningAlgorithm != null and tokenEndpointAuthenticationSigningAlgorithm != ''">
        token_endpoint_authentication_signing_algorithm = #{tokenEndpointAuthenticationSigningAlgorithm},
      </if>
      <if test="x509CertificateSubjectDn != null and x509CertificateSubjectDn != ''">
        x509_certificate_subject_dn = #{x509CertificateSubjectDn},
      </if>
      <if test="authorizationCodeTimeToLive != null and authorizationCodeTimeToLive != ''">
        authorization_code_time_to_live = #{authorizationCodeTimeToLive},
      </if>
      <if test="accessTokenTimeToLive != null and accessTokenTimeToLive != ''">
        access_token_time_to_live = #{accessTokenTimeToLive},
      </if>
      <if test="accessTokenFormat != null and accessTokenFormat != ''">
        access_token_format = #{accessTokenFormat},
      </if>
      <if test="deviceCodeTimeToLive != null and deviceCodeTimeToLive != ''">
        device_code_time_to_live = #{deviceCodeTimeToLive},
      </if>
      <if test="reuseRefreshTokens != null">
        reuse_refresh_tokens = #{reuseRefreshTokens},
      </if>
      <if test="refreshTokenTimeToLive != null and refreshTokenTimeToLive != ''">
        refresh_token_time_to_live = #{refreshTokenTimeToLive},
      </if>
      <if test="idTokenSignatureAlgorithm != null and idTokenSignatureAlgorithm != ''">
        id_token_signature_algorithm = #{idTokenSignatureAlgorithm},
      </if>
      <if test="x509CertificateBoundAccessTokens != null">
        x509_certificate_bound_access_tokens = #{x509CertificateBoundAccessTokens},
      </if>
    </set>
    where id = #{id}
  </update>

  <!--通过id删除Oauth2注册客户端-->
  <delete id="deleteById">
    delete from oauth2_registered_client where id = #{id}
  </delete>

  <!--通过客户端Id查找Oauth2注册客户端-->
  <select id="selectByClientId" resultMap="oauth2RegisteredClientResultMap">
    select
    <include refid="oauth2RegisteredClientColumnList"/>
    from oauth2_registered_client
    where client_id=#{clientId}
  </select>
</mapper>

