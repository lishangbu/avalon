name: Publish DockerHub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-dockerhub:
    runs-on: ubuntu-latest
    # 使用矩阵策略并行构建多个服务,避免重复代码,提高构建效率
    strategy:
      matrix:
        service: [avalon-admin-server, avalon-standalone-server]
    steps:
      - uses: actions/checkout@v5

      - name: 设置 Java 环境 - 使用Oracle JDK 25
        uses: actions/setup-java@v5
        with:
          java-version: '25'
          distribution: 'oracle'
          architecture: x64
          cache: 'maven'
          cache-dependency-path: |
            **/pom.xml
            **/maven-wrapper.properties

      - name: 提取maven版本
        if: github.event_name != 'pull_request'
        id: projectVersion
        run: echo "version=$(mvn org.apache.maven.plugins:maven-help-plugin:3.5.1:evaluate -DforceStdout -Dexpression=revision -q)" >> $GITHUB_OUTPUT

      - name: Docker 登录
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 构建镜像${{ github.event_name == 'pull_request' && ' (仅验证)' || ' 并推送' }}
        run: |
          mvn -B compile
          mvn -f avalon-application/${{ matrix.service }}/pom.xml spring-boot:build-image
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "✅ 镜像构建验证完成: ${{ matrix.service }}"
          else
            docker push docker.io/${{secrets.DOCKER_USERNAME}}/${{ matrix.service }}:latest
            docker tag docker.io/${{secrets.DOCKER_USERNAME}}/${{ matrix.service }}:latest docker.io/${{secrets.DOCKER_USERNAME}}/${{ matrix.service }}:${{ steps.projectVersion.outputs.version }}
            docker push docker.io/${{secrets.DOCKER_USERNAME}}/${{ matrix.service }}:${{ steps.projectVersion.outputs.version }}
            echo "✅ 镜像构建并推送完成: ${{ matrix.service }}"
          fi
